name: Make Recovery

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'LIBRARY_NAME'
        required: true
        default: 'omni'
      LIBRARY_URL:
        description: 'LIBRARY_URL'
        required: true
        default: 'https://github.com/Athwale/platform_manifest_twrp_omni.git'
      LIBRARY_BRANCH:
        description: 'LIBRARY_BRANCH'
        required: true
        default: 'twrp-10.0-deprecated'
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/Jacob5106/Android_hk_device_samsung_astarqltechn'
      DEVICE_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'main'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device_samsung_astarqltechn'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'astarqltechn'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    
    steps:
    - name: Maximize build disk space
      uses: easimon/maximize-build-space@v5
      with:
        root-reserve-mb: 1024
        swap-size-mb: 6144
        remove-dotnet: 'true'
        temp-reserve-mb: 1024
        remove-android: 'true'
        remove-haskell: 'true'

    - name: Check Out
      uses: actions/checkout@main

    - name: Prepare the environment
      run: |
        sudo apt update
        java -version
        echo "4" | sudo update-alternatives --config java
        echo JAVA_HOME=\"/usr/lib/jvm/jdk-8\" | sudo tee -a /etc/environment
        echo PATH=\"$PATH:$JAVA_HOME/bin\" | sudo tee -a /etc/environment
        source /etc/environment
        java -version
        sudo apt -y install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip jq bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev imagemagick libbz2-dev libssl-dev lzma ncftp bash-completion python3 openjdk-8-jdk qemu-user-static
        java -version
        
    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var
      
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        export PATH=~/bin:$PATH
      
    - name: Initialize repo
      run: |
        PATH=~/bin:$PATH
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "Hikaru's Action-Build-Bot"
        git config --global user.email "Android@teio.tk"
        repo init --depth=1 -u ${{ github.event.inputs.LIBRARY_URL }} -b ${{ github.event.inputs.LIBRARY_BRANCH }}
        sed -i 's|https://github.com/omnirom/android_system_core|https://github.com/omnirom/android_system_core_old|g' .repo/manifest.xml
        sed -i 's|https://github.com/omnirom/android_frameworks_base|https://github.com/omnirom/android_frameworks_base_old|g' .repo/manifest.xml
      id: pwd
     
    - name: Repo Sync
      run: |
        PATH=~/bin:$PATH
        cd workspace
        repo sync -j$(nproc --all)
      
    - name: Clone device
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        git clone ${{ github.event.inputs.DEVICE_URL }} -b ${{ github.event.inputs.DEVICE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}

    - name: Building
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        export ALLOW_MISSING_DEPENDENCIES=true
        export LC_ALL=C
        source build/envsetup.sh
        lunch ${{ github.event.inputs.LIBRARY_NAME }}_${{ github.event.inputs.DEVICE_NAME }}-eng
        make clean
        make recoveryimage -j$(nproc --all)
        
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.work }}
